USE DS04570_DB_CruscottoAuditAtpo;

DECLARE @TABLE_SCHEMA varchar(100);
DECLARE @TABLE_CATALOG varchar(100);

set @TABLE_SCHEMA = 'dbo'
set @TABLE_CATALOG = 'DS04570_DB_CruscottoAuditAtpo'

-- ---------------------------------------------------
-- -------------------AU_C_NONCONF--------------------
-- ---------------------------------------------------
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_SCHEMA = @TABLE_SCHEMA 
				 AND TABLE_CATALOG = @TABLE_CATALOG
                 AND  TABLE_NAME = 'AU_C_NONCONF'))
BEGIN
   print 'TABLE AU_C_NONCONF THEN DROP';
   DROP TABLE AU_C_NONCONF;
END
	ELSE
BEGIN
	print 'TABLE AU_C_NONCONF NOT EXISTS';
END

CREATE TABLE AU_C_NONCONF(
	[ID] [bigint] NOT NULL,
	[ID_C_CAMPAGNA] [bigint] NOT NULL,
	[ID_M_NONCONF] [bigint] NULL,
	[PESO_NON_CONF] [decimal](18, 2) NULL,
	[INCC] [decimal](18, 4) NULL,
	[DATA_INIZIO] [date] NULL,
	[DATA_FINE] [date] NULL,
	[VALORE_PESATO_FASE] [decimal](18, 2) NULL,
	[ID_FASE] [bigint] NULL,
	[TOT_PESO_NC] [decimal](18, 4) NULL,
	[TOT_PESO_FS] [decimal](18, 4) NULL,
	[VALORE_PESATO] [decimal](18, 4) NULL,
	[NUM_NC] [int] NULL,
 CONSTRAINT [PK__AU_C_NONCONF] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

IF (EXISTS ( SELECT * 
			 FROM INFORMATION_SCHEMA.SEQUENCES 
			 WHERE SEQUENCE_SCHEMA = 'dbo'
			 AND SEQUENCE_NAME  = 'ID_AU_C_NONCONF_SEQ'))
BEGIN
   print 'SEQUENCE ID_AU_C_NONCONF_SEQ THEN DROP';
   DROP SEQUENCE ID_AU_C_NONCONF_SEQ
END
	ELSE
BEGIN
	print 'SEQUENCE ID_AU_C_NONCONF_SEQ NOT EXISTS';
END

CREATE SEQUENCE ID_AU_C_NONCONF_SEQ
    START WITH 1
    INCREMENT BY 1 ;

-- ---------------------------------------------------
-- -------------------AU_C_RISCHIO--------------------
-- ---------------------------------------------------
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_SCHEMA = @TABLE_SCHEMA 
				 AND TABLE_CATALOG = @TABLE_CATALOG
                 AND  TABLE_NAME = 'AU_C_RISCHIO'))
BEGIN
   print 'TABLE AU_C_RISCHIO THEN DROP';
   DROP TABLE AU_C_RISCHIO;
END
	ELSE
BEGIN
	print 'TABLE AU_C_RISCHIO NOT EXISTS';
END

CREATE TABLE AU_C_RISCHIO(
	[ID] [bigint] NOT NULL,
	[ID_C_CAMPAGNA] [bigint] NOT NULL,
	[ID_M_RISCHIO] [bigint] NULL,
	[DATA_INIZIO] [date] NULL,
	[DATA_FINE] [date] NULL,
	[PESO_RISCHIO] [decimal](18, 2) NULL,
	[SU_TOT_PS_PERC] [decimal](18, 2) NULL,
	[NUM] [int] NULL,
	[SU_TOT_PERC] [decimal](18, 2) NULL,
	[SU_PS_PERC] [decimal](18, 2) NULL,
	[IMPORTO] [decimal](18, 2) NULL,
	[NUM_PS] [decimal](18, 2) NULL,
 CONSTRAINT [PK__AU_C_RISCHIO] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

IF (EXISTS ( SELECT * 
			 FROM INFORMATION_SCHEMA.SEQUENCES 
			 WHERE SEQUENCE_SCHEMA = 'dbo'
			 AND SEQUENCE_NAME  = 'ID_AU_C_RISCHIO_SEQ'))
BEGIN
   print 'SEQUENCE ID_AU_C_RISCHIO_SEQ THEN DROP';
   DROP SEQUENCE ID_AU_C_RISCHIO_SEQ
END
	ELSE
BEGIN
	print 'SEQUENCE ID_AU_C_RISCHIO_SEQ NOT EXISTS';
END

CREATE SEQUENCE ID_AU_C_RISCHIO_SEQ
    START WITH 1
    INCREMENT BY 1;

-- ---------------------------------------------------
-- -------------------AU_C_RISESPR--------------------
-- ---------------------------------------------------
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_SCHEMA = @TABLE_SCHEMA 
				 AND TABLE_CATALOG = @TABLE_CATALOG
                 AND  TABLE_NAME = 'AU_C_RISESPR'))
BEGIN
   print 'TABLE AU_C_RISESPR THEN DROP';
   DROP TABLE AU_C_RISESPR;
END
	ELSE
BEGIN
	print 'TABLE AU_C_RISESPR NOT EXISTS';
END

CREATE TABLE AU_C_RISESPR(
	[ID] [bigint] NOT NULL,
	[ID_C_CAMPAGNA] [bigint] NOT NULL,
	[ID_M_RISCHIO] [bigint] NULL,
	[ID_M_RISESPR] [bigint] NULL,
	[RAGGRUPPAMENTO_RISCHIO] [nchar](100) NULL,
	[NUM] [int] NULL,
	[NUM_RS] [int] NULL,
	[SU_TOT] [decimal](18, 2) NULL,
	[IMPORTO] [decimal](18, 2) NULL,
	[DESCRIZIONE] [nchar](200) NULL,
 CONSTRAINT [PK__AU_C_RISESPR] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

IF (EXISTS ( SELECT * 
			 FROM INFORMATION_SCHEMA.SEQUENCES 
			 WHERE SEQUENCE_SCHEMA = @TABLE_SCHEMA
			 AND SEQUENCE_NAME  = 'ID_AU_C_RISESPR_SEQ'))
BEGIN
   print 'SEQUENCE ID_AU_C_RISESPR_SEQ THEN DROP';
   DROP SEQUENCE ID_AU_C_RISESPR_SEQ
END
	ELSE
BEGIN
	print 'SEQUENCE ID_AU_C_RISESPR_SEQ NOT EXISTS';
END


CREATE SEQUENCE ID_AU_C_RISESPR_SEQ
    START WITH 1
    INCREMENT BY 1;

-- ---------------------------------------------------
-- -------------------AU_C_VARCOMP--------------------
-- ---------------------------------------------------
IF (EXISTS (SELECT * 
                 FROM INFORMATION_SCHEMA.TABLES 
                 WHERE TABLE_SCHEMA = @TABLE_SCHEMA 
				 AND TABLE_CATALOG = @TABLE_CATALOG
                 AND  TABLE_NAME = 'AU_C_VARCOMP'))
BEGIN
   print 'TABLE AU_C_VARCOMP THEN DROP';
   DROP TABLE AU_C_VARCOMP;
END
	ELSE
BEGIN
	print 'TABLE AU_C_VARCOMP NOT EXISTS';
END

CREATE TABLE AU_C_VARCOMP(
	[ID] [bigint] NOT NULL,
	[ID_C_CAMPAGNA] [bigint] NOT NULL,
	[ID_M_NONCONF] [bigint] NULL,
	[ID_M_VARCOMP] [bigint] NULL,
	[NUM_VC] [int] NULL,
	[NUM_NC] [int] NULL,
	[SOGLIA] [decimal](18, 4) NULL,
	[PERC_SU_PS] [decimal](18, 6) NULL,
	[PERC_PESATA] [decimal](18, 4) NULL,
	[DATA_INIZIO] [date] NULL,
	[DATA_FINE] [date] NULL,
	[ID_FASE] [bigint] NULL,
 CONSTRAINT [PK_AU_C_VARCOMP] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

IF (EXISTS ( SELECT * 
			 FROM INFORMATION_SCHEMA.SEQUENCES 
			 WHERE SEQUENCE_SCHEMA = @TABLE_SCHEMA
			 AND SEQUENCE_NAME  = 'ID_AU_C_VARCOMP_SEQ'))
BEGIN
   print 'SEQUENCE ID_AU_C_VARCOMP_SEQ THEN DROP';
   DROP SEQUENCE ID_AU_C_VARCOMP_SEQ
END
	ELSE
BEGIN
	print 'SEQUENCE ID_AU_C_VARCOMP_SEQ NOT EXISTS';
END

CREATE SEQUENCE ID_AU_C_VARCOMP_SEQ
    START WITH 1
    INCREMENT BY 1;
